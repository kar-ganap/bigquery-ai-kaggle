#!/usr/bin/env python3
"""
Add a strategic intelligence preview cell after Stage 5 execution
"""
import json

# Read the notebook
with open('notebooks/demo_competitive_intelligence.ipynb', 'r') as f:
    notebook = json.load(f)

cells = notebook['cells']

# Find the "### Stage 5 Summary" cell
stage5_summary_index = None
for i, cell in enumerate(cells):
    if cell.get('cell_type') == 'markdown' and cell.get('source'):
        source = cell['source'] if isinstance(cell['source'], str) else ''.join(cell['source'])
        if '### Stage 5 Summary' in source:
            stage5_summary_index = i
            break

if stage5_summary_index is None:
    print("‚ùå Could not find Stage 5 Summary cell")
    exit(1)

print(f"Found Stage 5 Summary at index {stage5_summary_index}")

# Create the strategic intelligence preview cell
preview_cell = {
    "cell_type": "code",
    "execution_count": None,
    "metadata": {},
    "outputs": [],
    "source": [
        "# Preview Strategic Intelligence Generated by AI\n",
        "print(\"üß† STRATEGIC INTELLIGENCE PREVIEW\")\n",
        "print(\"=\" * 50)\n",
        "print(\"Showcasing AI-generated strategic insights...\")\n",
        "print()\n",
        "\n",
        "try:\n",
        "    from src.utils.bigquery_client import run_query\n",
        "    \n",
        "    # Query to show strategic intelligence insights\n",
        "    preview_query = \"\"\"\n",
        "    SELECT \n",
        "        brand,\n",
        "        funnel,\n",
        "        angles,\n",
        "        promotional_intensity,\n",
        "        urgency_score,\n",
        "        brand_voice_score,\n",
        "        LEFT(creative_text, 100) as ad_preview\n",
        "    FROM `bigquery-ai-kaggle-469620.ads_demo.ads_with_dates`\n",
        "    WHERE funnel IS NOT NULL \n",
        "    ORDER BY promotional_intensity DESC\n",
        "    LIMIT 5\n",
        "    \"\"\"\n",
        "    \n",
        "    result = run_query(preview_query)\n",
        "    \n",
        "    if not result.empty:\n",
        "        print(\"üìä SAMPLE STRATEGIC INSIGHTS (Top 5 Most Promotional):\")\n",
        "        print()\n",
        "        \n",
        "        for i, row in result.iterrows():\n",
        "            print(f\"üè∑Ô∏è  BRAND: {row['brand']}\")\n",
        "            print(f\"   üìç Funnel Stage: {row['funnel']}\")\n",
        "            print(f\"   üéØ Messaging Angles: {row['angles']}\")\n",
        "            print(f\"   üìà Promotional Intensity: {row['promotional_intensity']:.2f}\")\n",
        "            print(f\"   ‚ö° Urgency Score: {row['urgency_score']:.2f}\")\n",
        "            print(f\"   üé® Brand Voice Score: {row['brand_voice_score']:.2f}\")\n",
        "            print(f\"   üí¨ Ad Preview: \\\"{row['ad_preview']}...\\\"\")\n",
        "            print()\n",
        "        \n",
        "        # Strategic insights summary\n",
        "        summary_query = \"\"\"\n",
        "        SELECT \n",
        "            COUNT(*) as total_ads,\n",
        "            AVG(promotional_intensity) as avg_promotional,\n",
        "            AVG(urgency_score) as avg_urgency,\n",
        "            AVG(brand_voice_score) as avg_brand_voice,\n",
        "            CASE\n",
        "                WHEN UPPER(funnel) LIKE 'UPPER%' THEN 'Upper'\n",
        "                WHEN UPPER(funnel) LIKE 'MID%' THEN 'Mid'\n",
        "                WHEN UPPER(funnel) LIKE 'LOWER%' THEN 'Lower'\n",
        "                ELSE funnel\n",
        "            END as normalized_funnel,\n",
        "            COUNT(*) as funnel_count\n",
        "        FROM `bigquery-ai-kaggle-469620.ads_demo.ads_with_dates`\n",
        "        WHERE funnel IS NOT NULL\n",
        "        GROUP BY normalized_funnel\n",
        "        ORDER BY funnel_count DESC\n",
        "        \"\"\"\n",
        "        \n",
        "        summary_result = run_query(summary_query)\n",
        "        \n",
        "        if not summary_result.empty:\n",
        "            print(\"üìà STRATEGIC INTELLIGENCE SUMMARY:\")\n",
        "            total_ads = summary_result['total_ads'].iloc[0]\n",
        "            print(f\"   üìä Total strategically labeled ads: {total_ads}\")\n",
        "            print(f\"   üìà Average promotional intensity: {summary_result['avg_promotional'].mean():.2f}\")\n",
        "            print(f\"   ‚ö° Average urgency score: {summary_result['avg_urgency'].mean():.2f}\")\n",
        "            print(f\"   üé® Average brand voice score: {summary_result['avg_brand_voice'].mean():.2f}\")\n",
        "            print()\n",
        "            print(\"üéØ FUNNEL STAGE DISTRIBUTION:\")\n",
        "            for _, row in summary_result.iterrows():\n",
        "                percentage = (row['funnel_count'] / total_ads) * 100\n",
        "                print(f\"   ‚Ä¢ {row['normalized_funnel']}: {row['funnel_count']} ads ({percentage:.1f}%)\")\n",
        "        \n",
        "        print(\"\\n‚úÖ Strategic intelligence successfully generated and ready for analysis!\")\n",
        "        print(\"üéØ These insights power advanced competitive intelligence in subsequent stages.\")\n",
        "    else:\n",
        "        print(\"‚ö†Ô∏è  No strategic intelligence data found - ensure Stage 5 completed successfully\")\n",
        "        \n",
        "except Exception as e:\n",
        "    print(f\"‚ö†Ô∏è  Could not preview strategic intelligence: {e}\")\n",
        "    print(\"   This is normal if Stage 5 hasn't run yet or if there's no data available\")"
    ]
}

# Insert the preview cell before the Stage 5 Summary
cells.insert(stage5_summary_index, preview_cell)

# Update the notebook
notebook['cells'] = cells

# Write back
with open('notebooks/demo_competitive_intelligence.ipynb', 'w') as f:
    json.dump(notebook, f, indent=1)

print(f"‚úÖ Successfully added strategic intelligence preview cell!")
print(f"   Inserted at index {stage5_summary_index}")
print(f"   Total cells now: {len(cells)}")
print(f"   Preview cell shows: AI strategic insights, funnel distribution, and promotional analysis")