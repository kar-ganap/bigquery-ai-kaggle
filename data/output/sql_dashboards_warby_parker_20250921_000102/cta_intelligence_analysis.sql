-- Cta Intelligence Analysis Dashboard
-- Generated by Systematic L1â†’L4 Intelligence Framework
-- Run ID: warby_parker_20250921_000102


            -- General Intelligence Dashboard with Temporal Analysis (Phase 1)
            WITH weekly_general_metrics AS (
              SELECT
                brand,
                DATE_TRUNC(DATE(start_timestamp), WEEK(MONDAY)) as week_start,
                COUNT(*) as weekly_signals,
                COUNT(DISTINCT DATE(start_timestamp)) as active_days_in_week,
                AVG(LENGTH(COALESCE(creative_text, ''))) as avg_content_length,
                COUNT(DISTINCT publisher_platforms) as platform_count_in_week,
                COUNT(DISTINCT ad_archive_id) as unique_campaigns_in_week
              FROM `bigquery-ai-kaggle-469620.ads_demo.ads_with_dates`
              WHERE start_timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 12 WEEK)
              GROUP BY brand, week_start
            ),
            temporal_analysis AS (
              SELECT
                brand, week_start, weekly_signals, active_days_in_week, avg_content_length,
                platform_count_in_week, unique_campaigns_in_week,
                -- Week-over-week changes
                LAG(weekly_signals) OVER (PARTITION BY brand ORDER BY week_start) as prev_week_signals,
                LAG(avg_content_length) OVER (PARTITION BY brand ORDER BY week_start) as prev_week_content_length,
                LAG(platform_count_in_week) OVER (PARTITION BY brand ORDER BY week_start) as prev_week_platforms,
                -- Competitive ranking
                RANK() OVER (PARTITION BY week_start ORDER BY weekly_signals DESC) as weekly_activity_rank,
                RANK() OVER (PARTITION BY week_start ORDER BY platform_count_in_week DESC) as weekly_platform_reach_rank
              FROM weekly_general_metrics
            ),
            general_summary AS (
              SELECT
                brand,
                COUNT(*) as weeks_active,
                SUM(weekly_signals) as total_signals,
                SUM(active_days_in_week) as total_active_days,
                AVG(avg_content_length) as overall_avg_content_length,
                AVG(platform_count_in_week) as avg_platform_count,
                AVG(unique_campaigns_in_week) as avg_campaigns_per_week,
                MIN(week_start) as first_seen_week,
                MAX(week_start) as last_seen_week,
                -- Temporal insights
                AVG(weekly_signals - COALESCE(prev_week_signals, weekly_signals)) as avg_weekly_activity_change,
                AVG(avg_content_length - COALESCE(prev_week_content_length, avg_content_length)) as avg_content_length_change,
                AVG(platform_count_in_week - COALESCE(prev_week_platforms, platform_count_in_week)) as avg_platform_expansion_change,
                AVG(weekly_activity_rank) as avg_activity_rank,
                AVG(weekly_platform_reach_rank) as avg_platform_reach_rank,
                -- Activity trends
                CASE
                  WHEN AVG(weekly_signals - COALESCE(prev_week_signals, weekly_signals)) > 2 THEN 'INCREASING_ACTIVITY'
                  WHEN AVG(weekly_signals - COALESCE(prev_week_signals, weekly_signals)) < -2 THEN 'DECREASING_ACTIVITY'
                  ELSE 'STABLE_ACTIVITY'
                END as activity_trend,
                CASE
                  WHEN AVG(avg_content_length - COALESCE(prev_week_content_length, avg_content_length)) > 10 THEN 'EXPANDING_CONTENT'
                  WHEN AVG(avg_content_length - COALESCE(prev_week_content_length, avg_content_length)) < -10 THEN 'SHORTENING_CONTENT'
                  ELSE 'STABLE_CONTENT_LENGTH'
                END as content_evolution_trend,
                CASE
                  WHEN AVG(platform_count_in_week - COALESCE(prev_week_platforms, platform_count_in_week)) > 0.5 THEN 'EXPANDING_REACH'
                  WHEN AVG(platform_count_in_week - COALESCE(prev_week_platforms, platform_count_in_week)) < -0.5 THEN 'CONSOLIDATING_REACH'
                  ELSE 'STABLE_REACH'
                END as platform_reach_trend,
                -- Competitive positioning
                CASE
                  WHEN AVG(weekly_activity_rank) <= 2 THEN 'MARKET_LEADER'
                  WHEN AVG(weekly_activity_rank) <= 4 THEN 'STRONG_PLAYER'
                  ELSE 'CHALLENGER'
                END as competitive_position
              FROM temporal_analysis
              GROUP BY brand
            )
            SELECT
              brand,
              weeks_active,
              total_signals,
              total_active_days,
              ROUND(overall_avg_content_length, 1) as avg_content_length,
              ROUND(avg_platform_count, 1) as avg_platform_count,
              ROUND(avg_campaigns_per_week, 1) as avg_campaigns_per_week,
              first_seen_week,
              last_seen_week,
              ROUND(avg_weekly_activity_change, 1) as avg_weekly_activity_change,
              ROUND(avg_content_length_change, 1) as avg_content_length_change,
              ROUND(avg_platform_expansion_change, 1) as avg_platform_expansion_change,
              activity_trend,
              content_evolution_trend,
              platform_reach_trend,
              competitive_position,
              ROUND(avg_activity_rank, 1) as avg_activity_rank,
              ROUND(avg_platform_reach_rank, 1) as avg_platform_reach_rank
            FROM general_summary
            ORDER BY total_signals DESC
            