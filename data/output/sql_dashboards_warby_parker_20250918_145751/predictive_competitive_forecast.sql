-- Predictive Competitive Forecast Dashboard
-- Generated by Systematic L1â†’L4 Intelligence Framework
-- Run ID: warby_parker_20250918_145751


        -- Predictive Competitive Forecast Dashboard (Phase 4)
        -- Integrates ML.FORECAST models with current competitive intelligence

        WITH current_competitive_state AS (
          SELECT
            brand,
            DATE_TRUNC(DATE(start_timestamp), WEEK(MONDAY)) as week_start,
            COUNT(*) as current_weekly_ads,
            AVG(duration_quality_weight) as current_avg_quality,
            COUNT(DISTINCT media_type) as current_media_diversity,
            AVG(ARRAY_LENGTH(platforms_array)) as current_platform_reach,
            SUM(CASE WHEN media_type = 'VIDEO' THEN 1 ELSE 0 END) / COUNT(*) * 100 as current_video_pct

          FROM `bigquery-ai-kaggle-469620.ads_demo.ads_with_dates`
          WHERE creative_text IS NOT NULL
            AND start_timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 8 WEEK)
          GROUP BY brand, week_start
        ),

        -- Get latest actual values for comparison baseline
        latest_actuals AS (
          SELECT
            brand,
            MAX(week_start) as latest_week,
            ARRAY_AGG(current_weekly_ads ORDER BY week_start DESC LIMIT 1)[OFFSET(0)] as latest_weekly_ads,
            ARRAY_AGG(current_avg_quality ORDER BY week_start DESC LIMIT 1)[OFFSET(0)] as latest_avg_quality,
            ARRAY_AGG(current_platform_reach ORDER BY week_start DESC LIMIT 1)[OFFSET(0)] as latest_platform_reach,
            ARRAY_AGG(current_video_pct ORDER BY week_start DESC LIMIT 1)[OFFSET(0)] as latest_video_pct
          FROM current_competitive_state
          GROUP BY brand
        ),

        -- ML.FORECAST Volume Predictions (4-week horizon)
        volume_forecasts AS (
          SELECT
            forecast_timestamp,
            brand_id as brand,
            forecast_value as predicted_weekly_ads,
            prediction_interval_lower_bound as ads_lower_bound,
            prediction_interval_upper_bound as ads_upper_bound,
            confidence_level
          FROM ML.FORECAST(MODEL `bigquery-ai-kaggle-469620.ads_demo.forecast_ad_volume`,
                          STRUCT(4 as horizon))
          WHERE forecast_timestamp > CURRENT_DATE()
        ),

        -- ML.FORECAST Aggressiveness Predictions
        aggressiveness_forecasts AS (
          SELECT
            forecast_timestamp,
            brand_id as brand,
            forecast_value as predicted_aggressiveness,
            prediction_interval_lower_bound as aggressiveness_lower,
            prediction_interval_upper_bound as aggressiveness_upper
          FROM ML.FORECAST(MODEL `bigquery-ai-kaggle-469620.ads_demo.forecast_aggressiveness`,
                          STRUCT(4 as horizon))
          WHERE forecast_timestamp > CURRENT_DATE()
        ),

        -- ML.FORECAST Cross-Platform Predictions
        platform_forecasts AS (
          SELECT
            forecast_timestamp,
            brand_id as brand,
            forecast_value as predicted_cross_platform_pct,
            prediction_interval_lower_bound as platform_lower,
            prediction_interval_upper_bound as platform_upper
          FROM ML.FORECAST(MODEL `bigquery-ai-kaggle-469620.ads_demo.forecast_cross_platform`,
                          STRUCT(4 as horizon))
          WHERE forecast_timestamp > CURRENT_DATE()
        ),

        -- Combine all forecasts with current state
        integrated_forecasts AS (
          SELECT
            v.forecast_timestamp,
            v.brand,

            -- Current baseline (latest actuals)
            l.latest_weekly_ads,
            l.latest_avg_quality,
            l.latest_platform_reach,
            l.latest_video_pct,

            -- Volume forecasts
            ROUND(v.predicted_weekly_ads, 1) as predicted_weekly_ads,
            ROUND(v.ads_lower_bound, 1) as ads_lower_bound,
            ROUND(v.ads_upper_bound, 1) as ads_upper_bound,
            v.confidence_level,

            -- Aggressiveness forecasts
            ROUND(COALESCE(a.predicted_aggressiveness, l.latest_avg_quality), 3) as predicted_aggressiveness,
            ROUND(COALESCE(a.aggressiveness_lower, l.latest_avg_quality * 0.9), 3) as aggressiveness_lower,
            ROUND(COALESCE(a.aggressiveness_upper, l.latest_avg_quality * 1.1), 3) as aggressiveness_upper,

            -- Platform forecasts
            ROUND(COALESCE(p.predicted_cross_platform_pct, l.latest_platform_reach), 2) as predicted_platform_reach,
            ROUND(COALESCE(p.platform_lower, l.latest_platform_reach * 0.8), 2) as platform_lower,
            ROUND(COALESCE(p.platform_upper, l.latest_platform_reach * 1.2), 2) as platform_upper,

            -- Calculate predicted changes from current state
            ROUND(v.predicted_weekly_ads - l.latest_weekly_ads, 1) as predicted_volume_change,
            ROUND((v.predicted_weekly_ads - l.latest_weekly_ads) / NULLIF(l.latest_weekly_ads, 0) * 100, 1) as predicted_volume_change_pct,

            -- Strategic prediction categories
            CASE
              WHEN v.predicted_weekly_ads > l.latest_weekly_ads * 1.2 THEN 'SIGNIFICANT_EXPANSION'
              WHEN v.predicted_weekly_ads > l.latest_weekly_ads * 1.1 THEN 'MODERATE_GROWTH'
              WHEN v.predicted_weekly_ads < l.latest_weekly_ads * 0.8 THEN 'SIGNIFICANT_CONTRACTION'
              WHEN v.predicted_weekly_ads < l.latest_weekly_ads * 0.9 THEN 'MODERATE_DECLINE'
              ELSE 'STABLE_VOLUME'
            END as predicted_volume_trend,

            -- Competitive forecast insights
            RANK() OVER (PARTITION BY v.forecast_timestamp ORDER BY v.predicted_weekly_ads DESC) as predicted_volume_rank,
            RANK() OVER (PARTITION BY v.forecast_timestamp ORDER BY COALESCE(a.predicted_aggressiveness, l.latest_avg_quality) DESC) as predicted_aggressiveness_rank

          FROM volume_forecasts v
          LEFT JOIN latest_actuals l ON v.brand = l.brand
          LEFT JOIN aggressiveness_forecasts a ON v.brand = a.brand AND v.forecast_timestamp = a.forecast_timestamp
          LEFT JOIN platform_forecasts p ON v.brand = p.brand AND v.forecast_timestamp = p.forecast_timestamp
        ),

        -- Add week-ahead competitive dynamics
        competitive_forecast_analysis AS (
          SELECT
            *,

            -- Forecast horizon analysis
            DATE_DIFF(forecast_timestamp, CURRENT_DATE(), DAY) as days_ahead,
            CASE
              WHEN DATE_DIFF(forecast_timestamp, CURRENT_DATE(), DAY) <= 7 THEN 'WEEK_1'
              WHEN DATE_DIFF(forecast_timestamp, CURRENT_DATE(), DAY) <= 14 THEN 'WEEK_2'
              WHEN DATE_DIFF(forecast_timestamp, CURRENT_DATE(), DAY) <= 21 THEN 'WEEK_3'
              ELSE 'WEEK_4'
            END as forecast_horizon,

            -- Strategic forecast alerts
            CASE
              WHEN predicted_volume_change_pct > 25 THEN 'HIGH_EXPANSION_ALERT'
              WHEN predicted_volume_change_pct < -25 THEN 'HIGH_CONTRACTION_ALERT'
              WHEN predicted_volume_rank <= 2 AND predicted_volume_change_pct > 10 THEN 'EMERGING_LEADER_ALERT'
              WHEN predicted_aggressiveness_rank <= 2 THEN 'AGGRESSIVENESS_LEADER_ALERT'
              ELSE 'NORMAL_FORECAST'
            END as strategic_alert,

            -- Confidence in predictions
            CASE
              WHEN confidence_level >= 0.95 THEN 'HIGH_CONFIDENCE'
              WHEN confidence_level >= 0.80 THEN 'MEDIUM_CONFIDENCE'
              ELSE 'LOW_CONFIDENCE'
            END as forecast_confidence_level

          FROM integrated_forecasts
        )

        SELECT
          brand,
          forecast_timestamp,
          days_ahead,
          forecast_horizon,

          -- Current state
          latest_weekly_ads as current_weekly_ads,
          latest_avg_quality as current_avg_quality,
          latest_platform_reach as current_platform_reach,

          -- Predicted state
          predicted_weekly_ads,
          predicted_aggressiveness,
          predicted_platform_reach,

          -- Prediction intervals
          ads_lower_bound,
          ads_upper_bound,
          aggressiveness_lower,
          aggressiveness_upper,
          platform_lower,
          platform_upper,

          -- Changes and trends
          predicted_volume_change,
          predicted_volume_change_pct,
          predicted_volume_trend,

          -- Competitive positioning
          predicted_volume_rank,
          predicted_aggressiveness_rank,

          -- Strategic insights
          strategic_alert,
          forecast_confidence_level,

          -- Forecast metadata
          ROUND(confidence_level * 100, 1) as confidence_pct

        FROM competitive_forecast_analysis
        ORDER BY brand, forecast_timestamp
        