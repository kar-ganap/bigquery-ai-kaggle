-- Channel Intelligence Analysis Dashboard
-- Generated by Systematic L1â†’L4 Intelligence Framework
-- Run ID: warby_parker_20250920_234705


            -- Channel Intelligence Dashboard with Temporal Analysis (Phase 1)
            WITH weekly_channel_metrics AS (
              SELECT
                brand,
                DATE_TRUNC(DATE(start_timestamp), WEEK(MONDAY)) as week_start,
                COUNT(*) as weekly_ads,
                COUNT(DISTINCT publisher_platforms) as unique_platforms,
                AVG(CASE WHEN publisher_platforms LIKE '%,%' THEN 1.0 ELSE 0.0 END) as cross_platform_rate,
                AVG(CASE
                  WHEN REGEXP_CONTAINS(publisher_platforms, 'Facebook') AND
                       REGEXP_CONTAINS(publisher_platforms, 'Instagram') AND
                       REGEXP_CONTAINS(publisher_platforms, 'Messenger') THEN 3
                  WHEN REGEXP_CONTAINS(publisher_platforms, 'Facebook') AND
                       REGEXP_CONTAINS(publisher_platforms, 'Instagram') THEN 2
                  WHEN publisher_platforms LIKE '%,%' THEN 1
                  ELSE 0
                END) as platform_diversification_score
              FROM `bigquery-ai-kaggle-469620.ads_demo.ads_with_dates`
              WHERE start_timestamp >= TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 12 WEEK)
              GROUP BY brand, week_start
            ),
            temporal_analysis AS (
              SELECT
                brand, week_start, weekly_ads, unique_platforms, cross_platform_rate, platform_diversification_score,
                -- Week-over-week changes
                LAG(weekly_ads) OVER (PARTITION BY brand ORDER BY week_start) as prev_week_ads,
                LAG(unique_platforms) OVER (PARTITION BY brand ORDER BY week_start) as prev_week_platforms,
                LAG(cross_platform_rate) OVER (PARTITION BY brand ORDER BY week_start) as prev_cross_platform_rate,
                -- Competitive ranking
                RANK() OVER (PARTITION BY week_start ORDER BY weekly_ads DESC) as weekly_volume_rank,
                RANK() OVER (PARTITION BY week_start ORDER BY unique_platforms DESC) as weekly_platform_diversity_rank,
                RANK() OVER (PARTITION BY week_start ORDER BY cross_platform_rate DESC) as weekly_cross_platform_rank
              FROM weekly_channel_metrics
            ),
            channel_summary AS (
              SELECT
                brand,
                COUNT(*) as weeks_active,
                SUM(weekly_ads) as total_ads,
                AVG(unique_platforms) as avg_platforms,
                AVG(cross_platform_rate) as avg_cross_platform_rate,
                AVG(platform_diversification_score) as avg_diversification_score,
                -- Temporal insights
                AVG(weekly_ads - COALESCE(prev_week_ads, weekly_ads)) as avg_weekly_volume_change,
                AVG(unique_platforms - COALESCE(prev_week_platforms, unique_platforms)) as avg_platform_expansion_change,
                AVG(cross_platform_rate - COALESCE(prev_cross_platform_rate, cross_platform_rate)) as avg_cross_platform_change,
                AVG(weekly_volume_rank) as avg_volume_rank,
                AVG(weekly_platform_diversity_rank) as avg_platform_diversity_rank,
                -- Trend classification
                CASE
                  WHEN AVG(weekly_ads - COALESCE(prev_week_ads, weekly_ads)) > 2 THEN 'INCREASING_VOLUME'
                  WHEN AVG(weekly_ads - COALESCE(prev_week_ads, weekly_ads)) < -2 THEN 'DECREASING_VOLUME'
                  ELSE 'STABLE_VOLUME'
                END as volume_trend,
                CASE
                  WHEN AVG(unique_platforms - COALESCE(prev_week_platforms, unique_platforms)) > 0.5 THEN 'EXPANDING_CHANNELS'
                  WHEN AVG(unique_platforms - COALESCE(prev_week_platforms, unique_platforms)) < -0.5 THEN 'CONSOLIDATING_CHANNELS'
                  ELSE 'STABLE_CHANNELS'
                END as channel_expansion_trend,
                CASE
                  WHEN AVG(cross_platform_rate - COALESCE(prev_cross_platform_rate, cross_platform_rate)) > 0.1 THEN 'INCREASING_CROSS_PLATFORM'
                  WHEN AVG(cross_platform_rate - COALESCE(prev_cross_platform_rate, cross_platform_rate)) < -0.1 THEN 'DECREASING_CROSS_PLATFORM'
                  ELSE 'STABLE_CROSS_PLATFORM'
                END as cross_platform_trend,
                -- Competitive positioning
                CASE
                  WHEN AVG(weekly_volume_rank) <= 2 THEN 'CHANNEL_LEADER'
                  WHEN AVG(weekly_volume_rank) <= 4 THEN 'STRONG_CHANNEL_PLAYER'
                  ELSE 'CHANNEL_CHALLENGER'
                END as competitive_position,
                -- Movement indicators
                CASE
                  WHEN AVG(weekly_volume_rank) - LAG(AVG(weekly_volume_rank)) OVER (ORDER BY brand) < -0.5 THEN 'IMPROVING_POSITION'
                  WHEN AVG(weekly_volume_rank) - LAG(AVG(weekly_volume_rank)) OVER (ORDER BY brand) > 0.5 THEN 'DECLINING_POSITION'
                  ELSE 'STABLE_POSITION'
                END as competitive_movement
              FROM temporal_analysis
              GROUP BY brand
            )
            SELECT
              brand,
              weeks_active,
              total_ads,
              ROUND(avg_platforms, 1) as avg_platforms,
              ROUND(avg_cross_platform_rate * 100, 1) as avg_cross_platform_pct,
              ROUND(avg_diversification_score, 1) as avg_diversification_score,
              ROUND(avg_weekly_volume_change, 1) as avg_weekly_volume_change,
              ROUND(avg_platform_expansion_change, 1) as avg_platform_expansion_change,
              ROUND(avg_cross_platform_change * 100, 1) as avg_cross_platform_change_pct,
              volume_trend,
              channel_expansion_trend,
              cross_platform_trend,
              competitive_position,
              competitive_movement,
              ROUND(avg_volume_rank, 1) as avg_volume_rank,
              ROUND(avg_platform_diversity_rank, 1) as avg_platform_diversity_rank
            FROM channel_summary
            ORDER BY total_ads DESC
            